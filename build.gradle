/*
 * This build file was auto generated by running the Gradle 'init' task
 * by 'jamie' at '9/27/16 12:00 PM' with Gradle 2.14.1
 *
 * This generated file contains a sample Java project to get you started.
 * For more details take a look at the Java Quickstart chapter in the Gradle
 * user guide available at https://docs.gradle.org/2.14.1/userguide/tutorial_java_projects.html
 */

// Apply the java plugin to add support for Java
apply plugin: 'java'

sourceSets {
  main {
    java.srcDirs = ["src/main/battlecode"]
    resources.srcDirs = ["src/main/battlecode"]

    output.classesDir = "$buildDir/classes"
    output.resourcesDir = "$buildDir/classes/battlecode"
  }
  test {
    java.srcDirs = ["src/test/battlecode"]
    resources.srcDirs = ["src/test/battlecode"]

    output.classesDir = "$buildDir/tests"
    output.resourcesDir = "$buildDir/tests/battlecode"
  }
}

// In this section you declare where to find the dependencies of your project
repositories {
  // Use 'jcenter' for resolving your dependencies.
  // You can declare any Maven/Ivy/file repository here.
  jcenter()
}

// In this section you declare the dependencies for your production and test code
dependencies {
  compile (    
    // The production code uses the SLF4J logging API at compile time
    [group: 'org.slf4j', name: 'slf4j-api', version: '1.7.21'],
    
    // normal dependencies
    [group: 'org.apache.commons', name: 'commons-lang3', version: '3.4'],
    [group: 'commons-cli', name: 'commons-cli', version: '1.3.1'],
    [group: 'commons-io', name: 'commons-io', version: '2.4'],
    [group: 'org.ow2.asm', name: 'asm', version: '5.0.4'],
    [group: 'org.ow2.asm', name: 'asm-tree', version: '5.0.4'],
	     
    // Flatbuffers
    [group: 'com.github.davidmoten', name: 'flatbuffers-java', version: '1.3.0.1'],
	     
    // JSON serialization
    [group: 'com.fasterxml.jackson.core', name: 'jackson-databind', version: '2.6.3'],
    // Uses features from Java 8 to make JSON serialization more convenient
    [group: 'com.fasterxml.jackson.datatype', name: 'jackson-datatype-jdk8', version: '2.6.3'],

    // ivy thinks xstream depends on 6 different xml parsers and 3 optional packages but we only need xpp3, and xmlpull, which specifies xpp3's API.
    [group: 'com.thoughtworks.xstream', name: 'xstream', version: '1.4.8', transitive: false],
    [group: 'xpp3', name: 'xpp3_min', version: '1.1.4c'],
    [group: 'xmlpull', name: 'xmlpull', version: '1.1.3.1'],
    
    // we only use WeakIdentityHashMap which doesn't depend on anything
    [group: 'org.hibernate', name: 'hibernate-search', version: '3.1.0.GA', transitive: false]
  )

  // Javadoc manipulation libraries
  compile files(System.getenv('JAVA_HOME') + '/lib/tools.jar')

  // Declare the dependency for your favourite test framework you want to use in your tests.
  // TestNG is also supported by the Gradle Test task. Just change the
  // testCompile dependency to testCompile 'org.testng:testng:6.8.1' and add
  // 'test.useTestNG()' to your build script.

  testCompile (
    [group: 'junit', name: 'junit', version: '4.12'],
    [group: 'org.mockito', name: 'mockito-core', version: '1.10.19'],
    [group: 'org.hamcrest', name: 'hamcrest-all', version: '1.3']
  )
}
